#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================
source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================
domain=$YNH_APP_ARG_DOMAIN
path_url="/"
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --time --weight=2

final_path=/opt/yunohost/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --time --weight=1

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=is_public --value=$is_public

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN WEB PORT (A)
#=================================================
ynh_script_progression --message="Configuring firewall..." --time --weight=16

# Find a free port for the web server
port=$(ynh_find_port --port=8080)
# Open this port
ynh_exec_warn_less yunohost firewall allow --no-upnp TCP $port
ynh_app_setting_set --app=$app --key=port --value=$port

#=================================================
# INSTALL DEPENDENCIES (B)
#=================================================
ynh_script_progression --message="Installing dependencies..." --time --weight=11

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# INSTALL NODEJS 10 (C)
#=================================================
ynh_script_progression --message="Installing Node.js..." --time --weight=11

ynh_install_nodejs --nodejs_version="19"
ynh_use_nodejs
# $nodejs_path: The absolute path of node for the chosen version.
# $nodejs_version: Just the version number of node for this app. Stored as 'nodejs_version' in settings.yml.

#=================================================
# INSTALL HOMEBRIDGE AND HOMEBRIDGE CONFIG UI X (D)
#=================================================
ynh_script_progression --message="Installing Homebridge and Homebridge Config UI X..." --time --weight=11

$nodejs_path/npm install -g --unsafe-perm homebridge@$homebridge_version homebridge-config-ui-x@$homebridge_config_ui_x_version

#=================================================
# CREATE HOMEBRIDGE USER (E)
#=================================================
ynh_script_progression --message="Create $app system user..." --time --weight=11

# Create homebridge user
ynh_system_user_create --username=$app --home_dir=$final_path
mkdir -p $final_path
chown -R $app: $final_path

# Give homebridge user password-less sudo permissions
visudo -c -q -f ../conf/homebridge_sudo
cp ../conf/homebridge_sudo /etc/sudoers.d/$app
chmod 600 /etc/sudoers.d/$app

#=================================================
# SETUP CONFIG FILES (F)
#=================================================
ynh_script_progression --message="Setup $app config files..." --time --weight=11
# Copy and modify $final_path/config.json
cp ../conf/config.json "$final_path/config.json"
ynh_replace_string --match_string="__PORT__" --replace_string="$port" --target_file="$final_path/config.json"

# Copy and modify /etc/default/homebridge
cp ../conf/homebridge_config "/etc/default/homebridge"
ynh_replace_string --match_string="__FINAL_PATH__" --replace_string="$final_path" --target_file="/etc/default/homebridge"
ynh_replace_string --match_string="__PATH__" --replace_string="$PATH" --target_file="/etc/default/homebridge"

#=================================================
# STORE CONFIG FILES CHECKSUM
#=================================================
# Calculate and store config file checksum into the app settings
ynh_store_file_checksum --file="$final_path/config.json"
ynh_store_file_checksum --file="/etc/default/homebridge"

#=================================================
# SETUP SYSTEMD (G)
#=================================================
ynh_script_progression --message="Configuring $app service..." --time --weight=1

homebridge_path=$(command -v homebridge)
ynh_replace_string --match_string="__HOMEBRIDGE_PATH__" --replace_string="$homebridge_path" --target_file="../conf/systemd.service"
ynh_add_systemd_config

#=================================================
# NGINX CONFIGURATION (H)
#=================================================
ynh_script_progression --message="Configuring nginx web server..." --time --weight=2

ynh_add_nginx_config

#=================================================
# SETUP LOGROTATE (I)
#=================================================
ynh_script_progression --message="Configuring log rotation..." --time --weight=1

cp ../conf/homebridge_rsyslog "/etc/rsyslog.d/$app.conf"
touch /var/log/$app.log
chown root:adm /var/log/$app.log
ynh_use_logrotate --logfile=/var/log/$app.log

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL (J)
#=================================================
yunohost service add $app --log "/var/log/$app.log"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring SSOwat..." --time --weight=1

# Make app public if necessary
if [ $is_public -eq 1 ]
then
    # unprotected_uris allows SSO credentials to be passed anyway.
    ynh_app_setting_set --app=$app --key=unprotected_uris --value="/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading nginx web server..." --time --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# START HOMEBRIDGE SERVICE (K)
#=================================================
ynh_script_progression --message="Starting $app service..." --time --weight=1

ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app.log"

#=================================================
# END OF SCRIPT
#=================================================
ynh_script_progression --message="Installation of $app completed" --time --last






